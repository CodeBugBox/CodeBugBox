from cryptography.hazmat.primitives.asymmetric import dh
from cryptography.hazmat.backends import default_backend
from cryptography.hazmat.primitives import serialization

# Parámetros compartidos
parameters = dh.generate_parameters(generator=2, key_size=2048, backend=default_backend())

# Parte 1: Alice genera su par de claves
alice_private_key = parameters.generate_private_key()
alice_public_key = alice_private_key.public_key()

# Parte 2: Bob genera su par de claves
bob_private_key = parameters.generate_private_key()
bob_public_key = bob_private_key.public_key()

# Intercambio de claves públicas y cálculo del secreto compartido
alice_shared_key = alice_private_key.exchange(bob_public_key)
bob_shared_key = bob_private_key.exchange(alice_public_key)

assert alice_shared_key == bob_shared_key
print("Clave compartida establecida correctamente.")
